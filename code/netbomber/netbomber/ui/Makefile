# Generated automatically from Makefile.in by configure.
# KDE tags expanded automatically by am_edit - $Revision: 1.265 $ 
# Makefile.in generated automatically by automake 1.4-p5 from Makefile.am

# Copyright (C) 1994, 1995-8, 1999, 2001 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

####### kdevelop will overwrite this part!!! (begin)##########


SHELL = /bin/sh

srcdir = .
top_srcdir = ../..
prefix = /usr/local
exec_prefix = ${prefix}
#>- 
bindir = ${exec_prefix}/bin
#>+ 3
DEPDIR = .deps

bindir = ${exec_prefix}/bin
sbindir = ${exec_prefix}/sbin
libexecdir = ${exec_prefix}/libexec
datadir = ${prefix}/share
sysconfdir = ${prefix}/etc
sharedstatedir = ${prefix}/com
localstatedir = ${prefix}/var
libdir = ${exec_prefix}/lib
infodir = ${prefix}/info
mandir = ${prefix}/man
includedir = ${prefix}/include
oldincludedir = /usr/include

DESTDIR =

pkgdatadir = $(datadir)/netbomber
pkglibdir = $(libdir)/netbomber
pkgincludedir = $(includedir)/netbomber

top_builddir = ../..

ACLOCAL = aclocal
AUTOCONF = autoconf
AUTOMAKE = automake
AUTOHEADER = autoheader

INSTALL = /usr/bin/install -c -p
INSTALL_PROGRAM = ${INSTALL} $(INSTALL_STRIP_FLAG) $(AM_INSTALL_PROGRAM_FLAGS)
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_SCRIPT = ${INSTALL}
transform = s,x,x,

NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_alias = i686-pc-linux-gnu
build_triplet = i686-pc-linux-gnu
host_alias = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
target_alias = i686-pc-linux-gnu
target_triplet = i686-pc-linux-gnu
ARTSCCONFIG = @ARTSCCONFIG@
AS = @AS@
AUTODIRS = @AUTODIRS@
CC = gcc
CONF_FILES = @CONF_FILES@
CPP = gcc -E
CXX = c++
CXXCPP = c++ -E
DCOPIDL = @DCOPIDL@
DCOPIDL2CPP = @DCOPIDL2CPP@
DCOP_DEPENDENCIES = @DCOP_DEPENDENCIES@
DLLTOOL = @DLLTOOL@
DPMSINC = @DPMSINC@
DPMSLIB = @DPMSLIB@
EXEEXT = 
GCJ = @GCJ@
GCJFLAGS = @GCJFLAGS@
GLINC = @GLINC@
GLLIB = @GLLIB@
GMSGFMT = /usr/bin/msgfmt
IDL = @IDL@
IDL_DEPENDENCIES = @IDL_DEPENDENCIES@
JAR = @JAR@
JAVAC = @JAVAC@
JAVAH = @JAVAH@
JVMLIBS = @JVMLIBS@
KDECONFIG = @KDECONFIG@
KDE_CXXFLAGS = 
KDE_EXTRA_RPATH = @KDE_EXTRA_RPATH@
KDE_INCLUDES = @KDE_INCLUDES@
KDE_LDFLAGS = @KDE_LDFLAGS@
KDE_PLUGIN = -avoid-version -module -no-undefined $(KDE_RPATH)
KDE_RPATH = @KDE_RPATH@
KDE_USE_CLOSURE_FALSE = #
KDE_USE_CLOSURE_TRUE = 
KDE_USE_FINAL_FALSE = 
KDE_USE_FINAL_TRUE = #
KDE_XSL_STYLESHEET = @KDE_XSL_STYLESHEET@
LIBCOMPAT = 
LIBCRYPT = -lcrypt
LIBDL = -ldl
LIBGEN = @LIBGEN@
LIBJPEG = -ljpeg
LIBMICO = @LIBMICO@
LIBOBJS = @LIBOBJS@
LIBPNG = -lpng -lz -lm
LIBPTHREAD = @LIBPTHREAD@
LIBPYTHON = @LIBPYTHON@
LIBQIMGIO = @LIBQIMGIO@
LIBRESOLV = -lresolv
LIBSHADOW = @LIBSHADOW@
LIBSM = -lSM -lICE
LIBSOCKET =  -lresolv
LIBTIFF = @LIBTIFF@
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBUCB = 
LIBUTIL = -lutil
LIBXINERAMA = 
LIBZ = -lz
LIB_KAB = @LIB_KAB@
LIB_KDECORE = @LIB_KDECORE@
LIB_KDEUI = @LIB_KDEUI@
LIB_KFILE = @LIB_KFILE@
LIB_KFM = @LIB_KFM@
LIB_KFORMULA = @LIB_KFORMULA@
LIB_KHTML = @LIB_KHTML@
LIB_KIMGIO = @LIB_KIMGIO@
LIB_KIO = @LIB_KIO@
LIB_KPARTS = @LIB_KPARTS@
LIB_KSPELL = @LIB_KSPELL@
LIB_KSYCOCA = @LIB_KSYCOCA@
LIB_KWRITE = @LIB_KWRITE@
LIB_QT = -lqt-mt $(LIBPNG) $(LIBJPEG) -lXext $(LIB_X11) $(LIBSM)
LIB_SMB = @LIB_SMB@
LIB_X11 = -lX11 $(LIBSOCKET)
LN_S = ln -s
MAKEINFO = makeinfo
MCOPIDL = @MCOPIDL@
MEINPROC = @MEINPROC@
MICO_INCLUDES = @MICO_INCLUDES@
MICO_LDFLAGS = @MICO_LDFLAGS@
MOC = /usr/lib/qt2//bin/moc
MSGFMT = /usr/bin/msgfmt
NOOPT_CXXFLAGS =  -Wall -fno-exceptions -fno-check-new
NOREPO = -fno-repo
OBJDUMP = @OBJDUMP@
OBJEXT = o
PACKAGE = netbomber
PAMLIBS = @PAMLIBS@
PASSWDLIBS = @PASSWDLIBS@
PYTHONINC = @PYTHONINC@
PYTHONLIB = @PYTHONLIB@
PYTHONMODDIR = @PYTHONMODDIR@
QT_INCLUDES = -I/usr/lib/qt2//include
QT_LDFLAGS = -L/usr/lib/qt2//lib
RANLIB = ranlib
REPO = -frepo
SETUIDFLAGS = @SETUIDFLAGS@
STRIP = strip
TOPSUBDIRS =  netbomber
UIC = /usr/lib/qt2//bin/uic
USER_INCLUDES = 
USER_LDFLAGS = 
USE_EXCEPTIONS = -fexceptions
USE_RTTI = 
USE_THREADS = @USE_THREADS@
VERSION = 0.1
XGETTEXT = /usr/bin/xgettext
XPMINC = @XPMINC@
XPMLIB = @XPMLIB@
X_EXTRA_LIBS =  -lresolv -pthread
X_INCLUDES = -I/usr/X11R6/include
X_LDFLAGS = -L/usr/X11R6/lib
X_PRE_LIBS = 
all_includes = -I/usr/lib/qt2//include -I/usr/X11R6/include
all_libraries = -L/usr/X11R6/lib -L/usr/lib/qt2//lib
idldir = @idldir@
jni_includes = @jni_includes@
kde_appsdir = @kde_appsdir@
kde_bindir = @kde_bindir@
kde_confdir = @kde_confdir@
kde_datadir = @kde_datadir@
kde_htmldir = @kde_htmldir@
kde_icondir = @kde_icondir@
kde_includes = @kde_includes@
kde_libraries = @kde_libraries@
kde_libs_htmldir = @kde_libs_htmldir@
kde_libs_prefix = @kde_libs_prefix@
kde_locale = @kde_locale@
kde_mimedir = @kde_mimedir@
kde_moduledir = @kde_moduledir@
kde_servicesdir = @kde_servicesdir@
kde_servicetypesdir = @kde_servicetypesdir@
kde_sounddir = @kde_sounddir@
kde_templatesdir = @kde_templatesdir@
kde_wallpaperdir = @kde_wallpaperdir@
micodir = @micodir@
qt_includes = /usr/lib/qt2//include
qt_libraries = /usr/lib/qt2//lib
x_includes = /usr/X11R6/include
x_libraries = /usr/X11R6/lib

INCLUDES = $(all_includes)

#>- libui_a_METASOURCES = AUTO

noinst_LIBRARIES = libui.a

libui_a_SOURCES = playerlistview.cpp emptyview.cpp spieloptview.cpp serverview.cpp joinserverview.cpp flammenview.moc.cpp flammenview.cpp bombenview.cpp wandview.cpp spielview.cpp spielfigurview.cpp spielfeldview.cpp pdtoguiinterface.cpp mauerview.cpp abstractspielelement.cpp 
KDE_OPTIONS = qtonly

SUBDIRS = generated 

EXTRA_DIST = abstractspielelement.cpp abstractspielelement.h mauerview.cpp mauerview.h pdtoguiinterface.cpp pdtoguiinterface.h spielfeldview.cpp spielfeldview.h spielfigurview.cpp spielfigurview.h spielview.cpp spielview.h wandview.cpp wandview.h bombenview.cpp bombenview.h flammenview.cpp flammenview.h flammenview.moc.cpp joinserverview.cpp joinserverview.h serverview.cpp serverview.h spieloptview.cpp spieloptview.h emptyview.cpp emptyview.h playerlistview.cpp playerlistview.h 
mkinstalldirs = $(SHELL) $(top_srcdir)/admin/mkinstalldirs
CONFIG_HEADER = ../../config.h
CONFIG_CLEAN_FILES = 
LIBRARIES =  $(noinst_LIBRARIES)


DEFS = -DHAVE_CONFIG_H -I. -I$(srcdir) -I../..
CPPFLAGS =  -DQT_THREAD_SUPPORT -pthread
LDFLAGS =   -s 
LIBS = 
libui_a_LIBADD = 
#>- libui_a_OBJECTS =  playerlistview.$(OBJEXT) emptyview.$(OBJEXT) \
#>- spieloptview.$(OBJEXT) serverview.$(OBJEXT) joinserverview.$(OBJEXT) \
#>- flammenview.moc.$(OBJEXT) flammenview.$(OBJEXT) bombenview.$(OBJEXT) \
#>- wandview.$(OBJEXT) spielview.$(OBJEXT) spielfigurview.$(OBJEXT) \
#>- spielfeldview.$(OBJEXT) pdtoguiinterface.$(OBJEXT) mauerview.$(OBJEXT) \
#>- abstractspielelement.$(OBJEXT)
#>+ 10
libui_a_final_OBJECTS = libui_a.all_cpp.o 
libui_a_nofinal_OBJECTS = playerlistview.$(OBJEXT) emptyview.$(OBJEXT) \
spieloptview.$(OBJEXT) serverview.$(OBJEXT) joinserverview.$(OBJEXT) \
flammenview.moc.$(OBJEXT) flammenview.$(OBJEXT) bombenview.$(OBJEXT) \
wandview.$(OBJEXT) spielview.$(OBJEXT) spielfigurview.$(OBJEXT) \
spielfeldview.$(OBJEXT) pdtoguiinterface.$(OBJEXT) mauerview.$(OBJEXT) \
abstractspielelement.$(OBJEXT)\
serverview.moc.o spieloptview.moc.o spielfeldview.moc.o spielview.moc.o joinserverview.moc.o 
libui_a_OBJECTS = $(libui_a_nofinal_OBJECTS)
#libui_a_OBJECTS = $(libui_a_final_OBJECTS)
AR = ar
CXXFLAGS = -O2 -O3 -Wall -fno-exceptions -fno-check-new
#>- CXXCOMPILE = $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 1
CXXCOMPILE = $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
#>- LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 1
LTCXXCOMPILE = $(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
CXXLD = $(CXX)
#>- CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(LDFLAGS) -o $@
#>+ 1
CXXLINK = $(LIBTOOL) --mode=link --tag=CXX $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) $(LDFLAGS) -o $@
DIST_COMMON =  Makefile.am Makefile.in


DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)

TAR = tar
GZIP_ENV = --best
#>- DEP_FILES =  .deps/abstractspielelement.P .deps/bombenview.P \
#>- .deps/emptyview.P .deps/flammenview.P .deps/flammenview.moc.P \
#>- .deps/joinserverview.P .deps/mauerview.P .deps/pdtoguiinterface.P \
#>- .deps/playerlistview.P .deps/serverview.P .deps/spielfeldview.P \
#>- .deps/spielfigurview.P .deps/spieloptview.P .deps/spielview.P \
#>- .deps/wandview.P
#>+ 14
#DEP_FILES =  $(DEPDIR)/serverview.moc.P $(DEPDIR)/spieloptview.moc.P $(DEPDIR)/spielfeldview.moc.P $(DEPDIR)/spielview.moc.P $(DEPDIR)/joinserverview.moc.P  $(DEPDIR)/libui_a.all_cpp.P \
	  .deps/abstractspielelement.P .deps/bombenview.P \
.deps/emptyview.P .deps/flammenview.P .deps/flammenview.moc.P \
.deps/joinserverview.P .deps/mauerview.P .deps/pdtoguiinterface.P \
.deps/playerlistview.P .deps/serverview.P .deps/spielfeldview.P \
.deps/spielfigurview.P .deps/spieloptview.P .deps/spielview.P \
.deps/wandview.P
DEP_FILES =  $(DEPDIR)/serverview.moc.P $(DEPDIR)/spieloptview.moc.P $(DEPDIR)/spielfeldview.moc.P $(DEPDIR)/spielview.moc.P $(DEPDIR)/joinserverview.moc.P   .deps/abstractspielelement.P .deps/bombenview.P \
.deps/emptyview.P .deps/flammenview.P .deps/flammenview.moc.P \
.deps/joinserverview.P .deps/mauerview.P .deps/pdtoguiinterface.P \
.deps/playerlistview.P .deps/serverview.P .deps/spielfeldview.P \
.deps/spielfigurview.P .deps/spieloptview.P .deps/spielview.P \
.deps/wandview.P

SOURCES = $(libui_a_SOURCES)
OBJECTS = $(libui_a_OBJECTS)

#>- all: all-redirect
#>+ 1
all: docs-am  all-redirect
.SUFFIXES:
.SUFFIXES: .S .c .cpp .lo .o .obj .s
$(srcdir)/Makefile.in: Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) 
#>- 	cd $(top_srcdir) && $(AUTOMAKE) --gnu netbomber/ui/Makefile
#>+ 2
	cd $(top_srcdir) && $(AUTOMAKE) --gnu netbomber/ui/Makefile
	cd $(top_srcdir) && perl admin/am_edit netbomber/ui/Makefile.in

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status $(BUILT_SOURCES)
	cd $(top_builddir) \
	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status


mostlyclean-noinstLIBRARIES:

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)

distclean-noinstLIBRARIES:

maintainer-clean-noinstLIBRARIES:

# FIXME: We should only use cygpath when building on Windows,
# and only if it is available.
.c.obj:
	$(COMPILE) -c `cygpath -w $<`

.s.o:
	$(COMPILE) -c $<

.S.o:
	$(COMPILE) -c $<

mostlyclean-compile:
	-rm -f *.o core *.core
	-rm -f *.$(OBJEXT)

clean-compile:

distclean-compile:
	-rm -f *.tab.c

maintainer-clean-compile:

.s.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.S.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:

maintainer-clean-libtool:

libui.a: $(libui_a_OBJECTS) $(libui_a_DEPENDENCIES)
	-rm -f libui.a
	$(AR) cru libui.a $(libui_a_OBJECTS) $(libui_a_LIBADD)
	$(RANLIB) libui.a
.cpp.o:
	$(CXXCOMPILE) -c $<
.cpp.obj:
	$(CXXCOMPILE) -c `cygpath -w $<`
.cpp.lo:
	$(LTCXXCOMPILE) -c $<

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.



all-recursive install-data-recursive install-exec-recursive \
installdirs-recursive install-recursive uninstall-recursive  \
check-recursive installcheck-recursive info-recursive dvi-recursive:
	@set fnord $(MAKEFLAGS); amf=$$2; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@set fnord $(MAKEFLAGS); amf=$$2; \
	dot_seen=no; \
	rev=''; list='$(SUBDIRS)'; for subdir in $$list; do \
	  rev="$$subdir $$rev"; \
	  test "$$subdir" != "." || dot_seen=yes; \
	done; \
	test "$$dot_seen" = "no" && rev=". $$rev"; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	here=`pwd` && cd $(srcdir) \
	  && mkid -f$$here/ID $$unique $(LISP)

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
   if test "$$subdir" = .; then :; else \
	    test -f $$subdir/TAGS && tags="$$tags -i $$here/$$subdir/TAGS"; \
   fi; \
	done; \
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	  || (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags  $$unique $(LISP) -o $$here/TAGS)

mostlyclean-tags:

clean-tags:

distclean-tags:
	-rm -f TAGS ID

maintainer-clean-tags:

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

subdir = netbomber/ui

distdir: $(DISTFILES)
	here=`cd $(top_builddir) && pwd`; \
	top_distdir=`cd $(top_distdir) && pwd`; \
	distdir=`cd $(distdir) && pwd`; \
	cd $(top_srcdir) \
	  && $(AUTOMAKE) --include-deps --build-dir=$$here --srcdir-name=$(top_srcdir) --output-dir=$$top_distdir --gnu netbomber/ui/Makefile
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  if test -d $$d/$$file; then \
	    cp -pr $$d/$$file $(distdir)/$$file; \
	  else \
	    test -f $(distdir)/$$file \
	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	    || cp -p $$d/$$file $(distdir)/$$file || :; \
	  fi; \
	done
	for subdir in $(SUBDIRS); do \
	  if test "$$subdir" = .; then :; else \
	    test -d $(distdir)/$$subdir \
	    || mkdir $(distdir)/$$subdir \
	    || exit 1; \
	    chmod 777 $(distdir)/$$subdir; \
	    (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir=../$(top_distdir) distdir=../$(distdir)/$$subdir distdir) \
	      || exit 1; \
	  fi; \
	done

DEPS_MAGIC := $(shell mkdir .deps > /dev/null 2>&1 || :)

-include $(DEP_FILES)

mostlyclean-depend:

clean-depend:

distclean-depend:
	-rm -rf .deps

maintainer-clean-depend:

%.o: %.c
	@echo '$(COMPILE) -c $<'; \
	$(COMPILE) -Wp,-MD,.deps/$(*F).pp -c $<
	@-cp .deps/$(*F).pp .deps/$(*F).P; \
	tr ' ' '\012' < .deps/$(*F).pp \
	  | sed -e 's/^\\$$//' -e '/^$$/ d' -e '/:$$/ d' -e 's/$$/ :/' \
	    >> .deps/$(*F).P; \
	rm .deps/$(*F).pp

%.lo: %.c
	@echo '$(LTCOMPILE) -c $<'; \
	$(LTCOMPILE) -Wp,-MD,.deps/$(*F).pp -c $<
	@-sed -e 's/^\([^:]*\)\.o[ 	]*:/\1.lo \1.o :/' \
	  < .deps/$(*F).pp > .deps/$(*F).P; \
	tr ' ' '\012' < .deps/$(*F).pp \
	  | sed -e 's/^\\$$//' -e '/^$$/ d' -e '/:$$/ d' -e 's/$$/ :/' \
	    >> .deps/$(*F).P; \
	rm -f .deps/$(*F).pp

%.o: %.cpp
	@echo '$(CXXCOMPILE) -c $<'; \
	$(CXXCOMPILE) -Wp,-MD,.deps/$(*F).pp -c $<
	@-cp .deps/$(*F).pp .deps/$(*F).P; \
	tr ' ' '\012' < .deps/$(*F).pp \
	  | sed -e 's/^\\$$//' -e '/^$$/ d' -e '/:$$/ d' -e 's/$$/ :/' \
	    >> .deps/$(*F).P; \
	rm .deps/$(*F).pp

%.lo: %.cpp
	@echo '$(LTCXXCOMPILE) -c $<'; \
	$(LTCXXCOMPILE) -Wp,-MD,.deps/$(*F).pp -c $<
	@-sed -e 's/^\([^:]*\)\.o[ 	]*:/\1.lo \1.o :/' \
	  < .deps/$(*F).pp > .deps/$(*F).P; \
	tr ' ' '\012' < .deps/$(*F).pp \
	  | sed -e 's/^\\$$//' -e '/^$$/ d' -e '/:$$/ d' -e 's/$$/ :/' \
	    >> .deps/$(*F).P; \
	rm -f .deps/$(*F).pp
info-am:
info: info-recursive
dvi-am:
dvi: dvi-recursive
check-am: all-am
check: check-recursive
installcheck-am:
installcheck: installcheck-recursive
install-exec-am:
install-exec: install-exec-recursive

install-data-am:
install-data: install-data-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
install: install-recursive
uninstall-am:
uninstall: uninstall-recursive
all-am: Makefile $(LIBRARIES)
all-redirect: all-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install
installdirs: installdirs-recursive
installdirs-am:


mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-rm -f config.cache config.log stamp-h stamp-h[0-9]*

maintainer-clean-generic:
mostlyclean-am:  mostlyclean-noinstLIBRARIES mostlyclean-compile \
		mostlyclean-libtool mostlyclean-tags mostlyclean-depend \
		mostlyclean-generic

mostlyclean: mostlyclean-recursive

#>- clean-am:  clean-noinstLIBRARIES clean-compile clean-libtool clean-tags \
#>- 		clean-depend clean-generic mostlyclean-am
#>+ 2
clean-am: clean-metasources clean-final   clean-noinstLIBRARIES clean-compile clean-libtool clean-tags \
		clean-depend clean-generic mostlyclean-am

#>- clean: clean-recursive
#>+ 1
clean: kde-rpo-clean  clean-recursive

distclean-am:  distclean-noinstLIBRARIES distclean-compile \
		distclean-libtool distclean-tags distclean-depend \
		distclean-generic clean-am
	-rm -f libtool

distclean: distclean-recursive

maintainer-clean-am:  maintainer-clean-noinstLIBRARIES \
		maintainer-clean-compile maintainer-clean-libtool \
		maintainer-clean-tags maintainer-clean-depend \
		maintainer-clean-generic distclean-am
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."

maintainer-clean: maintainer-clean-recursive

.PHONY: mostlyclean-noinstLIBRARIES distclean-noinstLIBRARIES \
clean-noinstLIBRARIES maintainer-clean-noinstLIBRARIES \
mostlyclean-compile distclean-compile clean-compile \
maintainer-clean-compile mostlyclean-libtool distclean-libtool \
clean-libtool maintainer-clean-libtool install-data-recursive \
uninstall-data-recursive install-exec-recursive \
uninstall-exec-recursive installdirs-recursive uninstalldirs-recursive \
all-recursive check-recursive installcheck-recursive info-recursive \
dvi-recursive mostlyclean-recursive distclean-recursive clean-recursive \
maintainer-clean-recursive tags tags-recursive mostlyclean-tags \
distclean-tags clean-tags maintainer-clean-tags distdir \
mostlyclean-depend distclean-depend clean-depend \
maintainer-clean-depend info-am info dvi-am dvi check check-am \
installcheck-am installcheck install-exec-am install-exec \
install-data-am install-data install-am install uninstall-am uninstall \
all-redirect all-am all installdirs-am installdirs mostlyclean-generic \
distclean-generic clean-generic maintainer-clean-generic clean \
mostlyclean distclean maintainer-clean


####### kdevelop will overwrite this part!!! (end)############

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

#>+ 3
serverview.moc.cpp: $(srcdir)/serverview.h
	$(MOC) $(srcdir)/serverview.h -o serverview.moc.cpp

#>+ 3
spieloptview.moc.cpp: $(srcdir)/spieloptview.h
	$(MOC) $(srcdir)/spieloptview.h -o spieloptview.moc.cpp

#>+ 3
spielfeldview.moc.cpp: $(srcdir)/spielfeldview.h
	$(MOC) $(srcdir)/spielfeldview.h -o spielfeldview.moc.cpp

#>+ 3
spielview.moc.cpp: $(srcdir)/spielview.h
	$(MOC) $(srcdir)/spielview.h -o spielview.moc.cpp

#>+ 3
joinserverview.moc.cpp: $(srcdir)/joinserverview.h
	$(MOC) $(srcdir)/joinserverview.h -o joinserverview.moc.cpp

#>+ 3
clean-metasources:
	-rm -f  serverview.moc.cpp spieloptview.moc.cpp spielfeldview.moc.cpp spielview.moc.cpp joinserverview.moc.cpp

#>+ 2
docs-am:

#>+ 5
force-reedit:
		cd $(top_srcdir) && $(AUTOMAKE) --gnu netbomber/ui/Makefile
	cd $(top_srcdir) && perl admin/am_edit netbomber/ui/Makefile.in


#>+ 11
libui_a.all_cpp.cpp: $(srcdir)/Makefile.in $(srcdir)/playerlistview.cpp $(srcdir)/emptyview.cpp $(srcdir)/spieloptview.cpp $(srcdir)/serverview.cpp $(srcdir)/joinserverview.cpp $(srcdir)/flammenview.moc.cpp $(srcdir)/flammenview.cpp $(srcdir)/bombenview.cpp $(srcdir)/wandview.cpp $(srcdir)/spielview.cpp $(srcdir)/spielfigurview.cpp $(srcdir)/spielfeldview.cpp $(srcdir)/pdtoguiinterface.cpp $(srcdir)/mauerview.cpp $(srcdir)/abstractspielelement.cpp  serverview.moc.cpp spieloptview.moc.cpp spielfeldview.moc.cpp spielview.moc.cpp joinserverview.moc.cpp
	@echo 'creating libui_a.all_cpp.cpp ...'; \
	rm -f libui_a.all_cpp.files libui_a.all_cpp.final; \
	echo "#define KDE_USE_FINAL 1" >> libui_a.all_cpp.final; \
	for file in playerlistview.cpp emptyview.cpp spieloptview.cpp serverview.cpp joinserverview.cpp flammenview.moc.cpp flammenview.cpp bombenview.cpp wandview.cpp spielview.cpp spielfigurview.cpp spielfeldview.cpp pdtoguiinterface.cpp mauerview.cpp abstractspielelement.cpp  serverview.moc.cpp spieloptview.moc.cpp spielfeldview.moc.cpp spielview.moc.cpp joinserverview.moc.cpp; do \
	  echo "#include \"$$file\"" >> libui_a.all_cpp.files; \
	  test ! -f $(srcdir)/$$file || egrep '^#pragma +implementation' $(srcdir)/$$file >> libui_a.all_cpp.final; \
	done; \
	cat libui_a.all_cpp.final libui_a.all_cpp.files  > libui_a.all_cpp.cpp; \
	rm -f libui_a.all_cpp.final libui_a.all_cpp.files

#>+ 3
clean-final:
	-rm -f libui_a.all_cpp.cpp

#>+ 2
final:
	$(MAKE) libui_a_OBJECTS="$(libui_a_final_OBJECTS)" all-am
#>+ 2
no-final:
	$(MAKE) libui_a_OBJECTS="$(libui_a_nofinal_OBJECTS)" all-am
#>+ 3
cvs-clean:
	$(MAKE) -f $(top_srcdir)/admin/Makefile.common cvs-clean

#>+ 3
kde-rpo-clean:
	-rm -f *.rpo
